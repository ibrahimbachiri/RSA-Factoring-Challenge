#!/usr/bin/python3
import sys
import math

def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

def pollards_rho(n):
    x, y, d = 2, 2, 1
    f = lambda x: (x ** 2 + 1) % n
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = math.gcd(abs(x - y), n)
    return d

def factorize_rsa(n):
    factors = []
    while n > 1:
        if is_prime(n):
            factors.append(n)
            break
        divisor = pollards_rho(n)
        while n % divisor == 0:
            factors.append(divisor)
            n //= divisor
    return factors

def main(filename):
    try:
        with open(filename, 'r') as file:
            for line in file:
                n = int(line.strip())
                factors = factorize_rsa(n)
                if len(factors) == 2:
                    p, q = factors
                    print(f"{n}={p}*{q}")
                else:
                    print(f"Failed to factorize {n} into two prime numbers.")
    except FileNotFoundError:
        print(f"File '{filename}' not found.")
    except ValueError:
        print("Invalid input. Make sure the file contains valid natural numbers greater than 1.")

	
if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
    else:
        filename = sys.argv[1]
        main(filename)
